#!/usr/bin/python3

from os import path, system, getcwd, listdir, rename
from shutil import copy

def up(fp):
    return path.abspath(path.join(fp, '..'))

def path_list(parent_dirs):
    all_paths = []
    for d in parent_dirs:
        all_paths += [path.join(d, f) for f in listdir(d)]
    return all_paths

def extract_name(basename):
    if basename[-len('-symbolic.svg'):] == '-symbolic.svg':
        name = basename[:-len('-symbolic.svg')]
    else:
        name = basename[:-len('.svg')]
    return name

def fix_links(parent_dir):
    system('find ' + str(parent_dir) + ' -type l -exec ./replace-links {} +')

def find_missing(symbolics, scalables):
    dirs_1 = []
    dirs_2 = []
    svgs_1 = []
    svgs_2 = []
    names_1 = []
    names_2 = []
    skips = []
    missing_symbolics = []
    missing_scalables = []
    for fp_1 in symbolics:
        dir_1 = path.basename(path.dirname(fp_1))
        svg_1 = path.basename(fp_1)
        name_1 = extract_name(svg_1)
        try:
            if svg_1[-len('-symbolic.svg'):] != '-symbolic.svg':
                svg_1 = svg_1[:-4] + '-symbolic.svg'
                if not path.islink(fp_1):
                    new_fp = path.join(symb_dir, dir_1, svg_1)
                    rename(fp_1, new_fp)
        except:
            pass
        dirs_1.append(dir_1)
        svgs_1.append(svgs_1)
        names_1.append(name_1)
    for fp_2 in scalables:
        dir_2 = path.basename(path.dirname(fp_2))
        svg_2 = path.basename(fp_2)
        name_2 = extract_name(svg_2)
        try:
            if svg_2[-len('-symbolic.svg'):] == '-symbolic.svg':
                svg_2 = svg_2[:-len('-symbolic.svg')] + '.svg'
                if not path.islink(fp_2):
                    new_fp = path.join(scal_dir, dir_2, svg_2)
                    rename(fp_2, new_fp)
        except:
            pass
        dirs_2.append(dir_2)
        svgs_2.append(svgs_2)
        names_2.append(name_2)
    combos_1 = []
    combos_2 = []
    for i in range(len(names_1)):
        n1 = names_1[i]
        d1 = dirs_1[i]
        combos_1.append(str(d1) + '/' + str(n1))
    for i in range(len(names_2)):
        n2 = names_2[i]
        d2 = dirs_2[i]
        combos_2.append(str(d2) + '/' + str(n2))
    for c1 in combos_1:
        skips.append(c1)
        if not c1 in combos_2:
            missing_scalables.append(c1)
    for c2 in combos_2:
        if not c2 in skips:
            skips.append(c2)
            if not c2 in combos_1:
                missing_symbolics.append(c2)
    blob = ((combos_1, dirs_1, svgs_1, names_1), (combos_2, dir_2, svgs_2, names_2))
    return missing_symbolics, missing_scalables, blob

here = getcwd()
main_dir = path.join(up(here), 'symbolia')
scal_dir = path.join(main_dir, 'scalable')
symb_dir = path.join(main_dir, 'symbolic')
scal_dirs = [path.join(scal_dir, b) for b in listdir(scal_dir)]
scal_dirs = [b for b in scal_dirs if not path.islink(b)]
symb_dirs = [path.join(symb_dir, b) for b in listdir(symb_dir)]
symb_dirs = [b for b in symb_dirs if not path.islink(b)]

for d in symb_dirs:
    fix_links(d)
for d in scal_dirs:
    fix_links(d)

symbs = path_list(symb_dirs)
scals = path_list(scal_dirs)

missing_symbs, missing_scals, blob = find_missing(symbs, scals)

for s in missing_symbs:
    pieces = s.split('/')
    src_dir = pieces[0]
    src_svg = pieces[1] + '.svg'
    dst_dir = src_dir
    dst_svg = pieces[1] + '-symbolic.svg'
    src_fp = path.join(scal_dir, src_dir, src_svg)
    dst_fp = path.join(symb_dir, dst_dir, dst_svg)
    print('copying ' + str(path.join(src_dir, src_svg)) + ' to ' + str(path.join(dst_dir, dst_svg)))
    print(src_fp)
    print(dst_fp)
    copy(src_fp, dst_fp)

for s in missing_scals:
    pieces = s.split('/')
    src_dir = pieces[0]
    src_svg = pieces[1] + '-symbolic.svg'
    dst_dir = src_dir
    dst_svg = pieces[1] + '.svg'
    src_fp = path.join(symb_dir, src_dir, src_svg)
    dst_fp = path.join(scal_dir, dst_dir, dst_svg)
    print('copying ' + str(path.join(src_dir, src_svg)) + ' to ' + str(path.join(dst_dir, dst_svg)))
    copy(src_fp, dst_fp)